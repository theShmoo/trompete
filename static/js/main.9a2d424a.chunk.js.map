{"version":3,"sources":["withRoot.jsx","endpoints.jsx","postForm.jsx","post.jsx","feed.jsx","app.jsx","index.js"],"names":["theme","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","withRoot","Component","props","CssBaseline","Posts","GetRequestOptions","method","redirect","withStyles","form","display","flexWrap","formControl","margin","spacing","minWidth","button","textField","classes","user","onSend","React","useState","text","setText","done","setDone","error","setError","hasError","handleSend","msg","headers","body","JSON","stringify","fetch","then","response","ok","json","console","log","catch","className","autoComplete","FormControl","TextField","id","multiline","rowsMax","InputLabelProps","shrink","fullWidth","value","onKeyPress","ev","key","preventDefault","onChange","event","target","Button","variant","disabled","onClick","color","endIcon","Typography","root","flexGrow","box","padding","post","Grid","item","xs","sm","lg","Paper","square","elevation","Feed","state","data","prevProps","this","update","refresh","setState","PostTexts","Object","entries","map","i","v","container","TrompeteIcon","role","aria-label","style","App","refreshFeed","AppBar","position","Toolbar","flex","ui","prevState","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9a2d424a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      light: \"#99d066\",\r\n      main: \"#689f38\",\r\n      dark: \"#387002\",\r\n      contrastText: '#000'\r\n    },\r\n    secondary: {\r\n      light: \"#819ca9\",\r\n      main: \"#546e7a\",\r\n      dark: \"#29434e\",\r\n      contrastText: '#fff'\r\n    },\r\n  },\r\n});\r\n\r\nfunction withRoot(Component) {\r\n  function WithRoot(props) {\r\n    // MuiThemeProvider makes the theme available down the React tree\r\n    // thanks to React context.\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  return WithRoot;\r\n}\r\n\r\nexport default withRoot;\r\n","export const Posts = 'https://lagerjodel.firebaseio.com/databases/posts.json';\r\n\r\nexport const GetRequestOptions = {\r\n  method: 'GET',\r\n  redirect: 'follow'\r\n};\r\n","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport { Posts } from './endpoints';\r\n\r\nconst styles = theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst PostForm = (props) => {\r\n  const { classes, user, onSend } = props;\r\n  const [text, setText] = React.useState('');\r\n  const [done, setDone] = React.useState(false);\r\n  const [error, setError] = React.useState(\"Leere Trompete\");\r\n  const hasError = error !== \"\"\r\n\r\n  const wrappedOnSend = () => {\r\n    onSend();\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (hasError) return;\r\n\r\n    const msg = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        'user': user,\r\n        'text': text\r\n      }),\r\n      redirect: 'follow'\r\n    };\r\n    fetch(Posts, msg)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((json) => {\r\n            console.log(json);\r\n            setDone(true);\r\n            wrappedOnSend();\r\n          }).catch(() => {\r\n            setError(\"Fehler beim Verarbeiten der Nachricht...\");\r\n          });\r\n        }\r\n        else {\r\n          setError(\"Mein Server mag diese Nachricht nicht...\");\r\n        }\r\n      })\r\n      // this would recover the error message\r\n      //.then( data => setError(\"sending failed...\" + data.errors[0].msg))\r\n      .catch(() => {\r\n        setError(\"Fehler beim Senden der Nachricht...\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n    setError(event.target.value ? \"\" : \"Leere Trompete\");\r\n  };\r\n\r\n  return <form className={classes.form} autoComplete=\"off\">\r\n    <FormControl className={classes.formControl}>\r\n      <TextField\r\n        id=\"my-text\"\r\n        multiline\r\n        error={hasError}\r\n        margin=\"normal\"\r\n        className={classes.textField}\r\n        rowsMax={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        fullWidth\r\n        value={text}\r\n        onKeyPress={(ev) => {\r\n          if (ev.key === 'Enter') {\r\n            handleSend();\r\n            ev.preventDefault();\r\n          }\r\n        }}\r\n        onChange={handleChange}\r\n      />\r\n    </FormControl>\r\n    <FormControl className={classes.formControl}>\r\n      <Button\r\n        variant=\"contained\"\r\n        disabled={done || hasError}\r\n        onClick={handleSend}\r\n        className={classes.button}\r\n        color={done ? \"secondary\" : \"primary\"}\r\n        endIcon={done ? <DoneIcon /> : <SendIcon />}>\r\n        Send\r\n            </Button>\r\n      {done ? <Typography variant=\"body1\" color=\"primary\">Danke!</Typography> : \"\"}\r\n    </FormControl>\r\n  </form>\r\n};\r\n\r\nexport default withStyles(styles)(PostForm);\r\n","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  box: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  }\r\n});\r\n\r\nconst Post = (props) => {\r\n\r\n  const { post, classes } = props;\r\n  const { text } = post;\r\n\r\n  return <Grid item xs={12} sm={6} lg={4} className={classes.root}>\r\n    <Paper square elevation={2} className={classes.box}>\r\n      <Typography variant=\"h6\" color=\"inherit\">\r\n        {text}\r\n      </Typography>\r\n    </Paper>\r\n  </Grid>\r\n};\r\n\r\nexport default withStyles(styles)(Post);\r\n\r\n","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Post from './post';\r\nimport { Posts, GetRequestOptions } from './endpoints';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nclass Feed extends React.Component {\r\n  state = {\r\n    data: {}\r\n  }\r\n\r\n  componentDidMount(prevProps) {\r\n    this.update()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.refresh !== prevProps.refresh) {\r\n      this.update()\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // const { user } = this.props;\r\n    fetch(Posts, GetRequestOptions).then(response => response.json())\r\n      .then(json => {\r\n        this.setState({ data: json })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const PostTexts = Object.entries(this.state.data).map(\r\n      ([k, v], i) => {\r\n        return <Post post={v} key={i} />\r\n      });\r\n\r\n    return <Grid className={classes.root} container spacing={2}>\r\n      {PostTexts}\r\n    </Grid>\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(Feed);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport withRoot from './withRoot';\r\nimport PostForm from './postForm';\r\nimport Feed from './feed';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  main: {\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(1),\r\n  },\r\n  ui: {\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst TrompeteIcon = () => { return <span role=\"img\" aria-label=\"trompete\" style={{ margin: \"1ex\" }}>🎺</span>; };\r\n\r\nconst user = 'databases/users/M8qkGNG5pSfIyxBcxPP';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    refreshFeed: false\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const handleSend = () => { this.setState(prevState => { return { refreshFeed: !prevState.refreshFeed } }); };\r\n\r\n    return <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <TrompeteIcon />\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n            Trompete\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Paper square elevation={4} className={classes.ui}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <PostForm user={user} onSend={handleSend} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Grid container spacing={2} className={classes.main}>\r\n        <Grid item xs={12}>\r\n          <Feed user={user} refresh={this.state.refreshFeed} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRoot(withStyles(styles)(App));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app.jsx';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}